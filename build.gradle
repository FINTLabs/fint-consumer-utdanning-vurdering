buildscript {
    apply from: 'https://raw.githubusercontent.com/FINTlibs/fint-buildscripts/v1.6.0/dependencies.gradle'
    ext {
        springBootVersion = springBootVersion
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'com.github.kt3k.coveralls' version '2.8.2'
    id 'com.github.ben-manes.versions' version '0.21.0'
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven'
apply plugin: 'jacoco'

version = "${version}-${apiVersion}"

repositories {
    mavenLocal()
    jcenter()
    maven {
        url "http://dl.bintray.com/fint/maven"
    }
}

dependencies {

    compile("no.fint:fint-utdanning-resource-model-java:${apiVersion}")

    compile('no.fint:fint-api-service-discover:1.1.0')
    compile('no.fint:fint-audit-mongo-plugin:1.4.1')
    compile('no.fint:fint-cache:2.2.0')
    compile('no.fint:fint-dependencies:0.0.3')
    compile('no.fint:fint-event-model:3.0.0')
    compile('no.fint:fint-events:2.2.0')
    compile('no.fint:fint-hazelcast:1.2.0-rc-1')
    compile('no.fint:fint-relations:2.0.0')
    compile('no.fint:fint-spring-secrets:0.1.0')

    compile('com.hazelcast:hazelcast:3.11.2')
    compile('com.hazelcast:hazelcast-kubernetes:1.3.1')

    compile("org.projectlombok:lombok:${lombokVersion}")
    compile("com.github.springfox.loader:springfox-loader:${springfoxLoaderVersion}")

    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-actuator')

    testCompile('no.fint:fint-test-utils:0.0.4')
    testCompile("cglib:cglib-nodep:${cglibVersion}")
    testCompile("org.spockframework:spock-spring:${spockSpringVersion}")
    testCompile("org.spockframework:spock-core:${spockSpringVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task copyExternalDependencies(type: Copy) {
    from configurations.runtime
    into "$buildDir/deps/external"
    exclude '**/fint-*.jar'
}

task copyFintDependencies(type: Copy) {
    from configurations.runtime
    into "$buildDir/deps/fint"
    include '**/fint-*.jar'
}

build.dependsOn(copyExternalDependencies)
build.dependsOn(copyFintDependencies)

jar {
    manifest {
        attributes(
                "Manifest-Version": "1.0",
                "Main-Class": "no.fint.consumer.Application",
                "Specification-Version": "${apiVersion}",
                "Implementation-Version": "${version}",
                "Class-Path": configurations.runtime.collect { it.getName() }.join(' ')
        )
    }
}

sourceCompatibility = 1.8

import org.apache.tools.ant.filters.ReplaceTokens
afterEvaluate {
    configure(processResources) {
        filesMatching('**/*.yml') {
            filter(ReplaceTokens, tokens: [version: jar.version, title: jar.baseName])
        }
    }
}

bootRepackage.enabled = false

bootRun {
    systemProperties System.properties
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

apply from: 'https://raw.githubusercontent.com/FINTlibs/fint-buildscripts/v1.6.0/dependencyReport.gradle'
